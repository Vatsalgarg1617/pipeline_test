pipeline{
     agent any
    
    
   stages{
      stage('Compile Stage'){

     steps{
      withMaven(maven : 'default'){
         sh 'cd internal_folder '
         sh ' mvn clean install'
        }
     }
   }
  
    stage('Testing Stage'){

     steps{
      withMaven(maven : 'default'){
         sh 'mvn test'


        }
     }
   }


   stage ('SonarQube Analysis'){
     steps{
     withSonarQubeEnv('sonarqube') {
    sh 'cd internal_folder & mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'

         }
    }
}

                              stage ('Artifactory Deploy'){
                                             steps{
                                                            script {
                                                            def server = Artifactory.server('default')
                                                            def rtMaven = Artifactory.newMavenBuild()
                                                            rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
                                                            rtMaven.deployer server: server, releaseRepo: 'vatsal', snapshotRepo: 'vatsal'
                                                            rtMaven.tool = 'default'
                                                            def buildInfo = rtMaven.run pom: 'internal_folder/pom.xml', goals: 'install'
                                                            server.publishBuildInfo buildInfo
                                                                                          }
                                                                           }
                                                            }


     

           
   }
}
